# See https://github.com/actions/dependency-review-action
name: 'Dependency Review'
on: [pull_request]
permissions:
  contents: read
env:
  BX_PR_NUMBER: ${{ github.event.number }}
jobs:
  dependency-review:
    name: Security
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
      - name: Dependency Security Review
        uses: actions/dependency-review-action@v2
        with:
          fail-on-severity: low
          allow-licenses: MIT
  dependency-updates:
    name: Versions
    runs-on: ubuntu-latest
    steps:
      - name: Environment
        run: env
      - name: Checkout Repository
        uses: actions/checkout@v3
      - name: Dependency Versions Review
        run: |
          # Useful debugging info
          #cat ${GITHUB_EVENT_PATH}

          echo "::debug ::BX_PR_NUMBER=${BX_PR_NUMBER}"

          # error off since we use 'git diff' to determine changes
          set +o errexit
          echo "::group::Downloading dependencies"
          go get -u all; go mod tidy
          echo "::endgroup::"
          set -o errexit

          TMP_GIT_STATUS_GO_MOD=$(git diff go.mod)
          echo "::debug ::TMP_GIT_STATUS_GO_MOD=${TMP_GIT_STATUS_GO_MOD}"

          if [ "${TMP_GIT_STATUS_GO_MOD}" == "" ]; then
            echo '::warning ::Dependencies are NOT outdated'
            curl -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" -X "POST" ${GITHUB_API_URL}/repos/${GITHUB_REPOSITORY}/pulls/${BX_PR_NUMBER} -d '{"title":"new title","body":"WARNING - Dependencies are outdated"}'

            else
              echo '::warning ::Dependencies are outdated'
              curl -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" -X "POST" ${GITHUB_API_URL}/repos/${GITHUB_REPOSITORY}/pulls/${BX_PR_NUMBER} -d '{"title":"new title","body":"WARNING - Dependencies are outdated"}'
          fi
